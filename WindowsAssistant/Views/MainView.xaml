<Window x:Class="PersonaDesk.Views.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:conv="clr-namespace:PersonaDesk.Converter"
        xmlns:views="clr-namespace:PersonaDesk.Views"
        Title="PersonaDesktop" Height="425" Width="500"
        Background="{StaticResource BackgroundBrush}" 
        Foreground="{StaticResource ForegroundBrush}">

    <Window.Resources>
        <conv:MessageToBubbleColorConverter x:Key="MessageToBubbleColorConverter"/>
        <conv:MessageToBubbleAlignConverter x:Key="MessageToBubbleAlignConverter"/>
        <conv:LoadingSpinnerVisibilityConverter x:Key="LoadingSpinnerVisibilityConverter"/>
        <conv:LoadingTextVisibilityConverter x:Key="LoadingTextVisibilityConverter"/>
        <conv:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <conv:InverseBoolToBoolConverter x:Key="InverseBoolToBoolConverter"/>
        <DropShadowEffect x:Key="DropShadowEffect"
                          BlurRadius="10"
                          Direction="270"
                          ShadowDepth="2"
                          Color="Black"
                          Opacity="0.3"/>

        <!-- Sleek slim vertical ScrollBar -->
        <Style x:Key="SlimScrollBarStyle" TargetType="ScrollBar">
            <Setter Property="Width" Value="6"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollBar">
                        <Grid Background="Transparent">
                            <!-- Add a spacer column before the track: -->
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="4"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <!-- Only the thumb is present: -->
                            <Track x:Name="PART_Track"
                                   IsDirectionReversed="True"
                                   Orientation="Vertical"
                                   Grid.Column="1"
                                   Focusable="False">
                                <!-- No RepeatButtons, so no rail drawn -->
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb"
                                           SnapsToDevicePixels="True"
                                           Background="#414141"
                                           Margin="1">
                                        <Thumb.Template>
                                            <ControlTemplate TargetType="Thumb">
                                                <Border Background="#414141"
                                                        CornerRadius="3"
                                                        Width="3"
                                                        />
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TabControl Style -->
        <Style TargetType="TabItem">
            <Setter Property="Margin" Value="0,0,4,0"/>
            <Setter Property="Padding" Value="12,6"/>
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
            <Setter Property="Background" Value="#2E2E3F"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border x:Name="Bd"
                        Background="{TemplateBinding Background}"
                        CornerRadius="0"
                        Padding="{TemplateBinding Padding}">
                            <ContentPresenter ContentSource="Header"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Bd" Property="CornerRadius" Value="8"/>
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource UserMessageBrush}"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <TabControl Background="{StaticResource BackgroundBrush}" Foreground="#414141" BorderThickness="0">
        <TabItem Header="Chat">
            <Grid Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <!-- Chat Area -->
                <ListBox Grid.Row="0"
                 x:Name="MessageList"
                 ItemsSource="{Binding OutputLog}" 
                 Background="Transparent"
                 BorderThickness="0"
                 Loaded="MessageList_Loaded"
                 ScrollViewer.CanContentScroll="False"
                 ScrollViewer.VerticalScrollBarVisibility="Auto">

                    <ListBox.Resources>
                        <Style TargetType="ScrollBar" BasedOn="{StaticResource SlimScrollBarStyle}" />
                    </ListBox.Resources>

                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="Margin" Value="0"/>
                            <Setter Property="Background" Value="Transparent"/>
                        </Style>

                    </ListBox.ItemContainerStyle>

                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Border Background="{Binding ., Converter={StaticResource MessageToBubbleColorConverter}}"
                            CornerRadius="12" Padding="10" Margin="5"
                            HorizontalAlignment="{Binding ., Converter={StaticResource MessageToBubbleAlignConverter}}"
                            Effect="{StaticResource DropShadowEffect}">

                                <StackPanel Orientation="Horizontal">

                                    <!-- Spinner: always animates, but Visibility toggled by converter -->
                                    <Viewbox Width="16" Height="16" Margin="0,0,6,0"
                                    Visibility="{Binding ., Converter={StaticResource LoadingSpinnerVisibilityConverter}}">
                                        <Canvas Width="16" Height="16">
                                            <Ellipse x:Name="SpinnerEllipse"
                                            Width="16" Height="16"
                                            Stroke="Gray" StrokeThickness="2"
                                            StrokeDashArray="2 2">
                                                <Ellipse.RenderTransform>
                                                    <RotateTransform x:Name="SpinnerRotate" CenterX="8" CenterY="8"/>
                                                </Ellipse.RenderTransform>
                                                <Ellipse.Triggers>
                                                    <EventTrigger RoutedEvent="Ellipse.Loaded">
                                                        <BeginStoryboard>
                                                            <Storyboard RepeatBehavior="Forever">
                                                                <DoubleAnimation Storyboard.TargetName="SpinnerRotate"
                                                                        Storyboard.TargetProperty="Angle"
                                                                        From="0" To="360"
                                                                        Duration="0:0:1"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger>
                                                </Ellipse.Triggers>
                                            </Ellipse>
                                        </Canvas>
                                    </Viewbox>

                                    <!-- Actual message text -->
                                    <TextBlock Text="{Binding}" TextWrapping="Wrap" MaxWidth="400"
                                        Visibility="{Binding ., Converter={StaticResource LoadingTextVisibilityConverter}}"/>
                                </StackPanel>
                            </Border>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

                <!-- Input Field with Embedded Send Button -->
                <Border Grid.Row="1"
                Background="#2E2E3F"
                CornerRadius="20"
                Padding="5"
                Margin="0,10,0,0">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" MinWidth="77" />
                        </Grid.ColumnDefinitions>

                        <TextBox x:Name="InputBox"
                 Grid.Column="0"
                 Text="{Binding InputText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 IsEnabled="{Binding IsLoading, Converter={StaticResource InverseBoolToBoolConverter}}"
                 KeyDown="Input_KeyDown"
                 Background="#2E2E3F"
                 BorderThickness="0"
                 Foreground="White"
                 FontSize="14"
                 Padding="10,5"
                 VerticalContentAlignment="Center"/>

                        <Button
                    Command="{Binding SubmitCommand}"
                    IsEnabled="{Binding IsLoading, Converter={StaticResource InverseBoolToBoolConverter}}"
                    Background="Transparent"
                    BorderThickness="0"
                    Padding="10"
                    ToolTip="Send"
                    Margin="28,0,0,0"
                    Grid.Column="1">

                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Border x:Name="border"
                                Background="Transparent"
                                CornerRadius="10"
                                Padding="{TemplateBinding Padding}">
                                                    <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="border" Property="Background" Value="#3E3E5A"/>
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter TargetName="border" Property="Background" Value="#2D2D48"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>

                            <!-- The send arrow -->
                            <Path Data="M0,0 L8,4 L0,8 Z"
                            Fill="White"
                            Width="14"
                            Height="16"
                            RenderTransformOrigin="1.458,0.383"
                            Stretch="Fill"/>
                        </Button>
                    </Grid>
                </Border>

                <Grid x:Name="LoadingOverlay"
              Background="#88000000"
              Visibility="{Binding IsLoading, Converter={StaticResource BoolToVisibilityConverter}}"
              Panel.ZIndex="10">
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Vertical" >
                        <Ellipse Width="30" Height="30" Stroke="White" StrokeThickness="3" StrokeDashArray="2 2">
                            <Ellipse.RenderTransform>
                                <RotateTransform x:Name="SpinnerRotate" CenterX="15" CenterY="15"/>
                            </Ellipse.RenderTransform>
                        </Ellipse>
                        <TextBlock Text="{Binding LoadingStatusText}" Foreground="White" Margin="10" FontWeight="Bold"/>
                    </StackPanel>

                    <Grid.Triggers>
                        <EventTrigger RoutedEvent="Grid.Loaded">
                            <BeginStoryboard>
                                <Storyboard RepeatBehavior="Forever">
                                    <DoubleAnimation Storyboard.TargetName="SpinnerRotate"
                                     Storyboard.TargetProperty="Angle"
                                     From="0" To="360"
                                     Duration="0:0:1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Grid.Triggers>
                </Grid>
            </Grid>
        </TabItem>
        <TabItem Header="Settings">
            <views:SettingsPage />
        </TabItem>
    </TabControl>
</Window>
